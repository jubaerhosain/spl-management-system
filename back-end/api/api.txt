GET: query param or param (never use body)
POST: always use body to create resource {in case of child resource can use param to identify parent resource}
PUT, DELETE: try to use body but some cases you can use param to "locate resource"
document with swagger

0. Authentication [done]
    post: auth/login 
    get: auth/ {authenticated user}
    delete: auth/logout

    put: auth/password

    // forgot password logic
    put: auth/forgot-password/generate-otp
    put: auth/forgot-password/verify-otp
    put: auth/forgot-password/reset-password

0. User
    put: user/account/activate
    put: user/account/deactivate
    put: user/{userId}/avatar

1.  Admin [done]
    post: admin/
    put: admin/
    delete: admin/{userId}

2. Student
    post: student/
    put: student/ {studentId from logged in user, from body if updateBy Admin} 
    get: student/{studentId}
    get: student/{studentId}/spl/current {current spl, with progress data} // remove spl include from get student query
    get: student/{studentId}/spl {all spl, with progress data}
    get: student/{studentId}/teacher/current {current supervisor}
    get: student/{studentId}/teacher/ {all supervisor}
    get: student/{studentId}/team/ {all teams of that student}
    get: student/{studentId}/team/current {get current team of that student}
    get: student/ {query params: optional}
    delete: student/{studentId} {by admin}

    post: student{studentId}/request body{teacherId} // request a teacher to be supervisor
    get: student/{studentId}/request  // all teacher requested by that student
    delete: student/{studentId}/request body{teacherId} // delete request

2. Teacher
    post: teacher/
    put: teacher/ {teacherId from logged in user}
    get: teacher/{teacherId}
    get: teacher/{teacherId}/student {all student under supervision, splName as query}
    get: teacher/{teacherId}/student/current {all student of current active spls, splName as query}
    get: teacher/{teacherId}/team {all teams under supervision, splName as query}
    get: teacher/{teacherId}/team/current {all team of current active spls, splName as query}
    get: teacher/ {query params: optional}
    delete: teacher/{teacherId} {by admin}

    get: teacher/{teacherId}/request/team {all teams who requested that teacher, splName=spl2}
    put: teacher/{teacherId}/request/team body{teamId, accept: true} // accept team request
    delete: teacher/{teacherId}/request/team body{teamId}  // reject team request
    get: teacher/{teacherId}/request/student {all students who requested that teacher, splName=spl3}
    put: teacher/{teacherId}/request/student body{studentId, accept: true} // accept student request
    delete: teacher/{teacherId}/request/student/ body{studentId} // reject student request

// to resource identification use splId, can use splName in other places
3. SPL 
    post: spl/
    get: spl/ {query params: optional, active: true/false}
    get: spl/{splName}/active // get active spl info by splName
    get: spl/{splId} 
    get: spl/{splId}/student 
    put: spl/{splId} {data in body}
    delete: spl/{splId}

    // ASSIGN STUDENTS TO THE SPL
    post: spl/{splId}/student/ // create mark table also for each student
    delete: spl/{splId}/student/{studentId}  // delete mark table also for that student

    put: spl/{splId}/head
    put: spl/{splId}/manager
    put: spl/{splId}/member/ //by email
    delete: spl/{splId}/member/{memberId}
    delete: spl/{splId}/head/{headId}
    delete: spl/{splId}/manager{managerId}

4. Team
    post: team/
    get: team/{params: optional, splName}
    get: team/{teamId}
    get: team/{teamId}/member
    put: team/{teamId}
    delete: team/{teamId}

    put: team/{teamId}/member {all members under that team}
    delete: team/{teamId}/member/{memberId}

    post: team/{teamId}/request body{teacherId} // request a teacher to be supervisor
    get: team/{teamId}/request //get all requested teachers by that team
    delete: team/{teamId}/request body{teacherId} // delete a team request

4. Supervisor (manual)
    put: supervisor/randomize
    put: supervisor   body{teacherId, studentId, splId/splName}
    delete: supervisor/ body{studentId, splId/splName}

5. Mark 
    put: mark/{markId} update atomic marks 
    get: mark/{markId} 
    get: mark/ {query params: splId|splName} mark of all student for a specific spl

    get: mark/student/{studentId} all 3 spl marks of a student 
        add query param {splName} mark of a student for a specific spl

    post: mark/{markId}/presentation-mark/ body {presentationId, mark}
    put: mark/{markId}/presentation-mark/ body{presentationMarkId, mark}
    get: mark{markId}/presentation-mark/ {query params: optional, splName, teacherId, presentationId}

    post: mark/{markId}/continuous-mark/ body{ weekName, mark}
    put: mark/{markId}/continuous-mark/ body{continuousMarkId, mark}

6. Presentation Mark


7. Continuous Mark
        put: continuous-mark/{continuousMarkId} body{mark}


6. Presentation Event
    post: presentation/

7. Notice 
    post: notice/
    get: notice/ 
    get: notice/{noticeId}
    put: notice/{noticeId} {notice}

8. Notification
    post: notification/
    get: notification/
    get: notification/{notificationId}
    put: notification/{notificationId} 

